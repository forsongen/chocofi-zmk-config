/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 /* PREAMBLE */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define MAC		0
#define WIN		1
#define NAVNUM		2
#define SYMBOL		3
#define FUNCTION	4
#define SHORTCUT	5


 /* ALIASES */

#define	XXX	&none
#define	___	&trans
#define	PRINT	&kp LG(LS(S))
#define	TAG	&kp RA(N3)
#define	XIV	&kp LS(F2)
#define	ZOOMIN	&kp LG(PLUS)
#define ZOOMOUT	&kp LG(MINUS)
#define TILDE	&kp LS(GRAVE)

 /* BEHAVIOURS */


&mt {
    hold-while-undecided;
};

&lt {
    hold-while-undecided;
    tapping-term-ms = <200>;
    quick-tap-ms = <199>;
    retro-tap;
};


/ {
 	behaviors {
	
     		numt: num_tap {
       			compatible = "zmk,behavior-hold-tap";
			label = "number_tap";
          		#binding-cells = <2>;
            		flavor = "tap-preferred";
            		tapping-term-ms = <400>;
            		quick-tap-ms = <150>;
            		bindings = <&kp>, <&kp>;
		};

     		ht: hold_tap {
       			compatible = "zmk,behavior-hold-tap";
			label = "hold_tap";
          		#binding-cells = <2>;
            		flavor = "hold-preferred";
            		tapping-term-ms = <200>;
            		quick-tap-ms = <150>;
            		bindings = <&kp>, <&kp>;
			hold-while-undecided;
		};
		
		hm: homerow_mods {
            		compatible = "zmk,behavior-hold-tap";
            		label = "HOMEROW_MODS";
            		#binding-cells = <2>;
            		tapping-term-ms = <200>;
            		quick-tap-ms = <199>;
            		flavor = "tap-preferred";
            		bindings = <&kp>, <&kp>;
			retro-tap;
		};
		
		swap: swapper {
            		compatible = "zmk,behavior-tri-state";
            		label = "SWAP";
            		#binding-cells = <0>;
            		bindings = <&kt LCMD>, <&kp TAB>, <&kt LCMD>;
            		ignored-key-positions = <1>;
        	};

		gqt: global-quick-tap {
			compatible = "zmk,behavior-hold-tap";
  			label = "GLOBAL_QUICK_TAP";
			#binding-cells = <2>;
			flavor = "tap-preferred";
			tapping-term-ms = <200>;
			quick-tap-ms = <125>;
			global-quick-tap;
			bindings = <&kp>, <&kp>;
		};

        };	
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp ESC>;
        };

        combo_undo {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp LG(Z)>;
        };

        combo_redo {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp LS(LG(Z))>;
        };

        combo_cut {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp LG(X)>;
        };

        combo_copy {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp LG(C)>;
        };

        combo_paste {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp LG(V)>;
        };

        combo_caps {
            timeout-ms = <50>;
            key-positions = <3 6>;
            bindings = <&kp CAPS>;
        };

    };

/* KEYMAP */
	
	keymap {
		compatible = "zmk,keymap";

		mac_layer {

			label = "MAC";
			bindings = <
// ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ 
     &kp Q          &kp W          &kp F          &hm LSHIFT P   &kp B                      &kp J          &hm RSHIFT L   &kp U          &kp Y          &kp QUOT
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤     
     &kp A          &kp R          &kp S          &kp T          &kp G                      &kp M          &kp N          &kp E          &kp I          &kp O
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   
     &hm LCTRL Z    &hm RALT X     &kp C          &kp D          &kp V                      &kp K          &kp H          &kp COMMA      &kp DOT        &kp FSLH
// ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯   
//                               ╭──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────╮
                                 &mt LCMD ENTER  &lt NAVNUM SPACE  &lt SHORTCUT TAB         &lt FUNCTION BSPC  &lt SYMBOL SPACE  &hm LCTRL DEL
//                               ╰──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────╯
			>;
		};
		
		win_layer {

			label = "WIN";
			bindings = <
// ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ 
     &kp Q          &kp W          &kp F          &hm LSHIFT P   &kp B                      &kp J          &hm RSHIFT L   &kp U          &kp Y          &kp QUOT
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤     
     &kp A          &kp R          &kp S          &kp T          &kp G                      &kp M          &kp N          &kp E          &kp I          &kp O
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤   
     &hm LGUI Z     &hm RALT X     &kp C          &kp D          &kp V                      &kp K          &kp H          &kp COMMA      &kp DOT        &kp FSLH
// ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯   
//                               ╭──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────╮
                                 &mt LCTRL ENTER  &lt NAVNUM SPACE  &lt SHORTCUT TAB        &lt FUNCTION BSPC  &lt SYMBOL SPACE  &hm LGUI DEL
//                               ╰──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────╯
			>;
		};

		navnum_layer {
		
			label = "NAVNUM";
			bindings = <
// ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ 
     &swap          &kp HOME       ___            &kp END        &kp PG_UP                  XXX            &numt F7 N7    &numt F8 N8    &numt F9 N9    &numt F10 EQUAL
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
     &kp LSHIFT     &kp LEFT       &kp UP         &kp RIGHT      &kp PG_DN                  &kp PLUS       &numt F4 N4    &numt F5 N5    &numt F6 N6    &numt F11 MINUS
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
     XXX            XXX            &kp DOWN       &kp BSPC       &kp DEL                    &kp ASTRK      &numt F1 N1    &numt F2 N2    &numt F3 N3    &numt F12 FSLH
// ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯  
//                               ╭──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────╮
                                   ___            ___            ___                        &kp BSPC       &kp N0         &kp DOT
//                               ╰──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────╯c
			>;
		};

		symbol_layer {
		
			label = "SYMBOL";
			bindings = <
// ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ 
     &kp EXCL       &kp AT         &kp HASH        &kp DLLR      &kp PRCNT                  &kp CARET      &kp AMPS       &kp ASTRK      &kp PLUS       &kp EQUAL
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
     &kp SEMI       &kp COLON      &kp LPAR        &kp RPAR      XXX                        &kp PLUS       &kp LBRC       &kp RBRC       &kp UNDER      &kp MINUS
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
     &kp PIPE       TILDE          &kp LT          &kp GT        XXX                        XXX            &kp LBKT       &kp RBKT       TAG            &kp BSLH
// ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯  
//                               ╭──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────╮
                                   ___            ___            ___                        ___            ___            ___
//                               ╰──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────╯

			>;
		};


		function_layer {

			label = "FUNCTION";
			bindings = <
// ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ 
     &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 5               ZOOMIN         XXX            XXX            XXX            &kp C_PWR
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
     XXX            XXX            XXX            XXX            XXX                        ZOOMOUT        &kp C_MUTE     &kp C_VOL_DN   &kp C_VOL_UP   XIV 
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
     &bt BT_CLR     XXX            XXX            XXX            XXX                        &tog WIN       XXX            XXX            XXX            PRINT
// ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯  
//                               ╭──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────╮
                                   XXX            XXX            XXX                        XXX            XXX            XXX 
//                               ╰──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────╯
			>;
		};

		shortcut_layer {

			label = "SHORTCUT";
			bindings = <

// ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────┬──────────────┬──────────────╮ 
     &kp LG(Q)      XXX            &kp LG(F)      &kp CAPS       XXX                        &kp PSCRN      &kp CAPS       XXX            XXX            &kp C_PWR
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
     &kp LG(A)      &kp LG(R)      &kp LG(S)      &kp LG(T)      &kp LG(N)                  XXX            XXX            XXX            XXX            XXX
// ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤           ├──────────────┼──────────────┼──────────────┼──────────────┼──────────────┤
     &kp LG(Z)      &kp LG(X)      &kp LG(C)      &kp LG(V)      &kp LS(LG(Z))              XXX            XXX            XXX            XXX            XXX
// ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────┴──────────────┴──────────────╯  
//                               ╭──────────────┬──────────────┬──────────────╮           ╭──────────────┬──────────────┬──────────────╮
                                   XXX            XXX            XXX                        XXX            XXX            XXX 
//                               ╰──────────────┴──────────────┴──────────────╯           ╰──────────────┴──────────────┴──────────────╯
			>;
		};

	};
};
