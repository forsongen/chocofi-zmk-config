#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE  0
#define NAV   1
#define SYM   2
#define NUM   3
#define MEDIA 4
#define SYS	  5

&mt {
  hold-while-undecided;
};

&lt {
  tapping-term-ms = <200>;
  quick-tap-ms = <199>;
};

&sk {
  release-after-ms = <2000>;
  quick-release;
};

/ {
  // COMBOS

  combos {
    compatible = "zmk,combos";

    // --> KEYCODES

    esc {
      key-positions = <1 11>;
      bindings = <&kp ESC>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    caps {
      key-positions = <1 2>;
      bindings = <&kp CAPS>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    tab {
      bindings = <&kp TAB>;
      key-positions = <11 12>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    backspace {
      key-positions = <3 13>;
      bindings = <&kp BSPC>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    del {
      key-positions = <4 14>;
      bindings = <&kp DEL>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    // --> SHORTCUTS

    num {
      bindings = <&tog 2>;
      key-positions = <7 8>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    cut {
      bindings = <&kp RG(X)>;
      key-positions = <20 21>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    copy {
      bindings = <&kp RG(C)>;
      key-positions = <21 22>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    paste {
      bindings = <&kp RG(V)>;
      key-positions = <23 22>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    undo {
      bindings = <&kp RG(Z)>;
      key-positions = <2 3>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    redo {
      bindings = <&kp LS(RG(Z))>;
      key-positions = <3 4>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    // --> SYMBOLS

    backslash {
      key-positions = <26 27>;
      bindings = <&newline 0 BSLH>;
      timeout-ms = <40>;
    };    

    forwardslash {
      key-positions = <27 28>;
      bindings = <&kp SLASH>;
      timeout-ms = <40>;
    };

    underscore {
      key-positions = <15 16>;
      bindings = <&kp UNDER>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    equals {
      key-positions = <16 17>;
      bindings = <&kp EQUAL>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    minus {
      bindings = <&kp MINUS>;
      key-positions = <17 18>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

    plus {
      key-positions = <6 7>;
      bindings = <&kp PLUS>;
      timeout-ms = <40>;
      require-prior-idle-ms = <200>;
    };

      bindings = <&dbrc 0 LBRC>;
      bindings = <&ltgt 0 LT>;
      bindings = <&dbkt 0 LBKT>;
  };

  // MACROS

  macros {
    triple_grave_macro: triple_grave_macro {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "TRIPLE_GRAVE_MACRO";
      bindings = <&kp GRAVE &kp GRAVE &kp GRAVE>;
    };
    new_line_macro: new_line_macro {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "NEW_LINE_MACRO";
      bindings = <&kp BSLH &kp N>;
    };
    less_greater: less_greater {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "LESS_GREATER";
      bindings = <&kp LT &kp GT &kp LEFT>;
    };
    double_bkt: double_bkt {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "DOUBLE_BKT";
      bindings = <&kp LBKT &kp RBKT &kp LEFT>;
    };
    double_par: double_par {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "DOUBLE_PAR";
      bindings = <&kp LPAR &kp RPAR &kp LEFT>;
    };
    double_brc: double_brc {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "DOUBLE_BRC";
      bindings = <&kp LBRC &kp RBRC &kp LEFT>;
    };
  };

  // BEHAVIOURS

  behaviors {
    // --> GENERAL

    ht: hold_tap {
      compatible = "zmk,behavior-hold-tap";
      label = "hold_tap";
      #binding-cells = <2>;
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <150>;
      bindings = <&kp>, <&kp>;
      hold-while-undecided;
    };

    gqt: global-quick-tap {
      compatible = "zmk,behavior-hold-tap";
      label = "GLOBAL_QUICK_TAP";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <125>;
      global-quick-tap;
      bindings = <&kp>, <&kp>;
    };

    lsm: layer_sticky_mod {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "LAYER_STICKY_MOD";
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <150>;
      bindings = <&mo>, <&sk>;
    };

    msl: mod_sticky_layer {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "MOD_STICKY_LAYER";
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <150>;
      bindings = <&kp>, <&sl>;
    };

    msm: mod_sticky_mod {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "MOD_STICKY_MOD";
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <150>;
      bindings = <&kp>, <&sk>;
    };

lsl: layer_sticky_layer {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "LAYER_STICKY_LAYER";
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <150>;
      bindings = <&mo>, <&sl>;
    };

    mtog: mod_tog {
      compatible = "zmk,behavior-hold-tap";
      label = "mod_tog";
      #binding-cells = <2>;
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      bindings = <&mo>, <&tog>;
    };

    // --> KEYMAP

    tgrave: grave_macro {
      compatible = "zmk,behavior-hold-tap";
      label = "GRAVE_MACRO";
      #binding-cells = <2>;
      tapping-term-ms = <400>;
      quick-tap-ms = <150>;
      flavor = "balanced";
      bindings = <&triple_grave_macro>, <&kp>;
    };

    newline: bslh_newline_macro {
      compatible = "zmk,behavior-hold-tap";
      label = "BSLH_NEWLINE_MACRO";
      #binding-cells = <2>;
      tapping-term-ms = <400>;
      quick-tap-ms = <150>;
      flavor = "balanced";
      bindings = <&new_line_macro>, <&kp>;
    };

    ltgt: ltgt_macro {
      compatible = "zmk,behavior-hold-tap";
      label = "LTGT_MACRO";
      #binding-cells = <2>;
      tapping-term-ms = <400>;
      quick-tap-ms = <150>;
      flavor = "balanced";
      bindings = <&less_greater>, <&kp>;
    };

    dbkt: dbkt_macro {
      compatible = "zmk,behavior-hold-tap";
      label = "DBKT_MACRO";
      #binding-cells = <2>;
      tapping-term-ms = <400>;
      quick-tap-ms = <150>;
      flavor = "balanced";
      bindings = <&double_bkt>, <&kp>;
    };

    dpar: dpar_macro {
      compatible = "zmk,behavior-hold-tap";
      label = "DPAR_MACRO";
      #binding-cells = <2>;
      tapping-term-ms = <400>;
      quick-tap-ms = <150>;
      flavor = "balanced";
      bindings = <&double_par>, <&kp>;
    };

    dbrc: dbrc_macro {
      compatible = "zmk,behavior-hold-tap";
      label = "DBRC_MACRO";
      #binding-cells = <2>;
      tapping-term-ms = <400>;
      quick-tap-ms = <150>;
      flavor = "balanced";
      bindings = <&double_brc>, <&kp>;
    };

    cmdtab: cmdtab {
      compatible = "zmk,behavior-tri-state";
      label = "CMDTAB";
      #binding-cells = <0>;
      bindings = <&kt LCMD>, <&kp TAB>, <&kt LCMD>;
      ignored-key-positions = <1>;
    };

    ctrltab: ctrltab {
      compatible = "zmk,behavior-tri-state";
      label = "CTRLTAB";
      #binding-cells = <0>;
      bindings = <&kt LCTRL>, <&kp TAB>, <&kt LCTRL>;
      ignored-key-positions = <1>;
    };

  // KEYMAP

  keymap {
    compatible = "zmk,keymap";

    base {
      label = "BASE";
      bindings = <
        &kp QUOTE  &kp COMMA  &kp DOT        &kp P          &kp Y               &kp F             &kp G           &kp C         &kp R  &kp L
        &kp A      &kp O      &kp E          &kp U          &kp I               &kp D             &kp H           &kp T         &kp N  &kp S
        &kp SEMI   &kp Q      &kp J          &kp K          &kp X               &kp B             &kp M           &kp W         &kp V  &kp Z
                              &mtog SYS NAV  &lt NAV SPACE  &msm LSHFT LSHFT    &msm RSHFT RSHFT  &lsl MEDIA SYM  &lsl SYS NUM 
      >;
    };

    nav {
      label = "NAV";
      bindings = <
        &kp HOME   &kp LA(LEFT)  &none     &kp LA(RIGHT)  &kp END    &kp PG_UP  &none   &none  &none  &none
        &kp LSHFT  &kp LEFT      &kp UP    &kp RIGHT      &none      &kp PG_DN  &none   &none  &none  &none
        &cmdtab    &ctrltab      &kp DOWN  &kp BSPC       &kp DEL    &none      &none   &none  &none  &none
                                 &trans    &trans         &trans     &trans     &trans  &trans
      >;
    };

bindings = <&dbrc 0 LBRC>;

    sym {
      label = "SYM";
      bindings = <
        &tgrave 0 GRAVE  &kp LS(GRAVE)  &dbkt 0 LBKT  &ltgt 0 LT    &kp PRCNT    &kp CARET  &kp GT    &kp RBKT  &kp QMARK  &FSLH
        &kp EXCL         &kp AT         &kp RA(N3)    &kp DLLR      &kp PLUS     &kp EQUAL  &kp AMPS  &kp STAR  &kp UNDER  &kp MINUS
        &none            &none          &dbrc 0 LBRC  &dpar 0 LPAR  &none        &none      &kp RPAR  &kp RBRC  &kp PIPE   &kp BSLH
                                        &trans        &trans        &trans       &trans     &trans    &trans
      >;
    };

    num {
      label = "NUM";
      bindings = <
        &kp F11  &kp F12  &kp DOT  &none   &none     &none   &kp RA(N2)  &kp HASH  &kp DLLR  &kp FSLH
        &kp N1   &kp N2   &kp N3   &kp N4  &kp N5    &kp N6  &kp N7      &kp N8    &kp N9    &kp N0
        &kp F1   &kp F2   &kp F3   &kp F4  &kp F5    &kp F6  &kp F7      &kp F8    &kp F9    &kp F10
                          &trans   &trans  &trans    &trans  &trans      &trans
      >;
    };

    media {
      label = "MEDIA";
      bindings = <
        &none  &none  &none   &none   &none     &none   &kp C_PP    &kp C_NEXT    &kp C_PREV    &none
        &none  &none  &none   &none   &none     &none   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none
        &none  &none  &none   &none   &none     &none   &none       &none         &none         &none    
                      &trans  &trans  &trans    &trans  &trans      &trans
      >;
    };

    sys {
      label = "SYS";
      bindings = <
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none
        &sys_reset    &none         &none         &none         &bt BT_CLR      &bt BT_CLR    &none         &none         &none         &sys_reset
                                    &none         &none         &bootloader     &bootloader   &none         &none
      >;
    };
  };
};
