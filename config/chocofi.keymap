/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    hold-while-undecided;
};

&lt {
    tapping-term-ms = <200>;
    quick-tap-ms = <199>;
};

/* COMBOS */

/ {
  combos {
    compatible = "zmk,combos";

    esc {
      key-positions = <1 2>;
      bindings = <&kp ESC>;
    };

    tab {
      bindings = <&kp TAB>;
      key-positions = <11 12>;
    };

    caps {
      key-positions = <27 28>;
      bindings = <&kp CAPS>;
    };

    undo {
      key-positions = <2 3>;
      bindings = <&kp LG(Z)>;
    };

    redo {
      key-positions = <4 3>;
      bindings = <&kp LS(LG(Z))>;
    };

    cut {
      key-positions = <20 21>;
      bindings = <&kp LG(X)>;
    };

    copy {
      key-positions = <21 22>;
      bindings = <&kp LG(C)>;
    };

    paste {
      key-positions = <23 24>;
      bindings = <&kp LG(V)>;
    };

    all {
      bindings = <&kp LG(A)>;
      key-positions = <10 11>;
    };
  };

/* MACROS */

  macros {
    triple_grave_macro: triple_grave_macro {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "TRIPLE_GRAVE_MACRO";
      bindings = <&kp GRAVE &kp GRAVE &kp GRAVE>;
    };

    double_par: double_par {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "DOUBLE_PAR";
      bindings = <&kp LPAR &kp RPAR &kp LEFT>;
    };

    double_brc: double_brc {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "DOUBLE_BRC";
      bindings = <&kp LBRC &kp RBRC &kp LEFT>;
    };

    double_bkt: double_bkt {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "DOUBLE_BKT";
      bindings = <&kp LBKT &kp RBKT &kp LEFT>;
    };

    less_than_greater_than: less_than_greater_than {
      compatible = "zmk,behavior-macro";
      #binding-cells = <0>;
      label = "LESS_THAN_GREATER_THAN";
      bindings = <&kp LT &kp GT &kp LEFT>;
    };
  };

/* BEHAVIOURS */

behaviors {
    gqt: global-quick-tap {
      compatible = "zmk,behavior-hold-tap";
      label = "GLOBAL_QUICK_TAP";
      #binding-cells = <2>;
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <125>;
      global-quick-tap;
      bindings = <&kp>, <&kp>;
    };

    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "HOMEROW_MODS";
      tapping-term-ms = <200>;
      quick-tap-ms = <199>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };

    lsm: layer_sticky_mods {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "LAYER_STICKY_MODS";
      flavor = "tap-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <150>;
      bindings = <&mo>, <&sk>;
    };

    msm: mod_sticky_mods {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      label = "MOD_STICKY_MODS";
      flavor = "hold-preferred";
      tapping-term-ms = <200>;
      quick-tap-ms = <150>;
      bindings = <&kp>, <&sk>;
    };

    tgrave: grave_macro {
      compatible = "zmk,behavior-hold-tap";
      label = "GRAVE_MACRO";
      #binding-cells = <2>;
      tapping-term-ms = <400>;
      quick-tap-ms = <150>;
      flavor = "balanced";
      bindings = <&triple_grave_macro>, <&kp>;
    };

    dpar: par_macro {
      compatible = "zmk,behavior-tap-dance";
      label = "PAR_MACRO";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LPAR>, <&double_par>;
    };

    dbrc: brc_macro {
      compatible = "zmk,behavior-tap-dance";
      label = "BRC_MACRO";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LBRC>, <&double_brc>;
    };

    dbkt: bkt_macro {
      compatible = "zmk,behavior-tap-dance";
      label = "BKT_MACRO";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LBKT>, <&double_bkt>;
    };

    ltgt: ltgt_macro {
      compatible = "zmk,behavior-tap-dance";
      label = "LTGT_MACRO";
      #binding-cells = <0>;
      tapping-term-ms = <200>;
      bindings = <&kp LT>, <&less_than_greater_than>;
    };

    cmdtab: cmdtab {
      compatible = "zmk,behavior-tri-state";
      label = "CMDTAB";
      #binding-cells = <0>;
      bindings = <&kt LCMD>, <&kp TAB>, <&kt LCMD>;
      ignored-key-positions = <1>;
    };

    ctrltab: ctrltab {
      compatible = "zmk,behavior-tri-state";
      label = "CTRLTAB";
      #binding-cells = <0>;
      bindings = <&kt LCTRL>, <&kp TAB>, <&kt LCTRL>;
      ignored-key-positions = <1>;
    };
  };

/* KEYMAP */

  keymap {
    compatible = "zmk,keymap";

    unix {
      label = "UNIX";
      bindings = <
        &kp Q        &kp W       &kp F        &kp P        &kp B            &kp J          &kp L        &kp U       &kp Y       &kp QUOT
        &hm LCTRL A  &hm LALT R  &hm LGUI S   &kp T        &kp G            &kp M          &kp N        &hm RGUI E  &hm RALT I  &hm RCTRL O
        &kp Z        &kp X       &kp C        &kp D        &kp V            &kp K          &kp H        &kp COMMA   &kp DOT     &kp FSLH
                                 &lt 7 ENTER  &lt 3 SPACE  &lsm 5 LSHIFT    &lsm 6 RSHIFT  &lt 4 SPACE  &lt 7 BSPC
      >;
    };

    win {
      label = "WIN";
      bindings = <
        &trans      &trans  &trans       &trans  &trans    &trans  &trans  &trans       &trans  &trans
        &hm LGUI A  &trans  &hm LCTRL S  &trans  &trans    &trans  &trans  &hm RCTRL E  &trans  &hm RGUI O
        &trans      &trans  &trans       &trans  &trans    &trans  &trans  &trans       &trans  &trans
                            &trans       &trans  &trans    &trans  &trans  &trans
      >;
    };

    gaming {
      label = "GAMING ";
      bindings = <
        &trans  &trans  &trans     &trans  &trans                &trans  &trans  &trans       &trans  &trans
        &kp A   &kp R   &kp S      &trans  &trans                &trans  &trans  &hm RCTRL E  &trans  &hm RGUI O
        &trans  &trans  &trans     &trans  &trans                &trans  &trans  &trans       &trans  &trans
                        &kp ENTER  &trans  &msm LSHIFT LSHIFT    &trans  &trans  &trans
      >;
    };

    nvnm {
      label = "NAVNUM ";
      bindings = <
        &cmdtab        &kp HOME  &kp LS(F12)  &kp END    &none            &none   &kp N7  &kp N8  &kp N9  &none
        &kp LA(LEFT)   &kp LEFT  &kp UP       &kp RIGHT  &kp LA(RIGHT)    &none   &kp N4  &kp N5  &kp N6  &kp MINUS
        &kp LG(SPACE)  &ctrltab  &kp DOWN     &kp BSPC   &kp DEL          &none   &kp N1  &kp N2  &kp N3  &kp FSLH
                                    &trans       &trans     &trans           &trans  &kp N0  &trans
      >;
    };

    symb {
      label = "SYMBOL ";
      bindings = <
        &kp LS(GRAVE)  &kp DLLR  &kp PRCNT  &kp AMPS  &kp PIPE    &tgrave 0 GRAVE  &kp AT    &kp EXCL   &kp ASTRK   &kp CARET
        &kp LS(N3)     &kp SEMI  &kp COLON  &dpar     &dbrc       &kp RBRC         &kp RPAR  &kp EQUAL  &kp PLUS    &kp MINUS
        &kp RA(N2)     &none     &none      &dbkt     &ltgt       &kp GT           &kp RBKT  &kp UNDER  &kp RA(N3)  &kp BSLH
                                 &trans     &trans    &trans      &trans           &trans    &trans
      >;
    };

    func {
      label = "FUNCTION";
      bindings = <
        &none             &kp LS(HOME)  &none         &kp LS(END)    &none                &none   &kp F9  &kp F10  &kp F11  &kp F12
        &kp LS(LA(LEFT))  &kp LS(LEFT)  &kp LS(UP)    &kp LS(RIGHT)  &kp LS(LA(RIGHT))    &none   &kp F5  &kp F6   &kp F7   &kp F8
        &none             &none         &kp LS(DOWN)  &none          &none                &none   &kp F1  &kp F2   &kp F3   &kp F4
                                        &trans        &trans         &trans               &trans  &trans  &trans
      >;
    };

    media {
      label = "MEDIA";
      bindings = <
        &none  &kp LS(LC(LA(F5)))  &none               &kp LS(LC(LA(F6)))  &none    &none             &kp C_VOL_UP  &none  &none  &none
        &none  &kp LS(LC(LA(F1)))  &kp LS(LC(LA(F2)))  &kp LS(LC(LA(F3)))  &none    &none             &kp C_VOL_DN  &none  &none  &none
        &none  &none               &kp LS(LC(LA(F4)))  &none               &none    &kp C_PLAY_PAUSE  &kp C_MUTE    &none  &none  &none
                                   &none               &none               &none    &none             &none         &none
      >;
    };

    connect {
      label = "CONNECT";
      bindings = <
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
        &to 0         &to 1         &to 2         &none         &none           &to 0         &to 1         &to 2         &none         &none
        &bt BT_CLR    &none         &none         &none         &sys_reset      &sys_reset    &none         &none         &none         &bt BT_CLR
                                    &none         &none         &none           &none         &none         &none
      >;
    };
  };
};
